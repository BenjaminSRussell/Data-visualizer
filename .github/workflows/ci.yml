name: CI

on:
  push:
    branches: [main, master]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pre-commit

      - name: Run pre-commit hooks
        run: pre-commit run --all-files

      - name: Validate data quality (if test data exists)
        run: |
          if [ -f "Site.jsonl" ]; then
            echo "Validating data quality..."
            python3 analysis/data_validator.py Site.jsonl
          else
            echo "No test data found, skipping validation"
          fi
        continue-on-error: true

      - name: Run unit tests
        run: pytest --maxfail=1 --disable-warnings -q --cov=analysis --cov=server --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          fail_ci_if_error: false

  data-quality:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jsonschema pandera pandas typer rich

      - name: Check for modified data files
        id: check_data
        run: |
          if git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep -E '\.jsonl$'; then
            echo "data_changed=true" >> $GITHUB_OUTPUT
          else
            echo "data_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Validate modified data files
        if: steps.check_data.outputs.data_changed == 'true'
        run: |
          for file in $(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep -E '\.jsonl$'); do
            if [ -f "$file" ]; then
              echo "Validating $file..."
              python3 analysis/data_validator.py "$file" --strict
            fi
          done
